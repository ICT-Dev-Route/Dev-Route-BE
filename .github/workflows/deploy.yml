name: Docker Image 만들기

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  My-Deploy-Job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout  # 리포지토리 소스 코드 체크아웃
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up Docker Buildx  # Buildx 설치
        uses: docker/setup-buildx-action@v2
        with:
          install: true
          driver-opts: image=moby/buildkit:latest  # 최신 버전의 BuildKit 사용

      - name: JDK 17 설치  # JDK 17 설치
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Spring Project 빌드하기  # Spring 프로젝트 빌드
        run: |
          cd ./dev-route/
          chmod +x ./gradlew
          ./gradlew clean build -x test

      - name: Cache Docker layers  # Docker 레이어 캐시 저장 및 복원
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Docker 이미지 만들고 DockerHub에 푸시  # Docker 이미지 빌드 후 DockerHub에 푸시
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          cd ./dev-route/
          docker buildx build --builder default --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache,mode=max \
            --push \
            -t ${{ secrets.DOCKER_REPO }}/devroute-server:${{ github.sha }} .

      - name: EC2에서 이미지 pull 후 컨테이너 실행  # EC2 서버에서 Docker 이미지 pull 및 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_SSH_USER }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            docker rm -f $(docker ps -qa)
            docker pull ${{ secrets.DOCKER_REPO }}/devroute-server:${{ github.sha }}
            docker run -d -p 8080:8080 -e "SPRING_PROFILES_ACTIVE=prod" ${{ secrets.DOCKER_REPO }}/devroute-server:${{ github.sha }}
